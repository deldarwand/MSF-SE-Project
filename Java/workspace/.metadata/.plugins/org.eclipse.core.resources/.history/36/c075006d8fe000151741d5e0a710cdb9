package google.bluetooth;

import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;

import com.fazecast.jSerialComm.SerialPort;

public enum DataTransmissionServer {

	INSTANCE;
	
	private static final int DELIMETER = 124; // Equal to '|'
	
	private List<ProcessThread> threads;
	
	private DataTransmissionServer(){
		
		
	}
	
	public void start() throws IOException{
		System.out.println("Starting server");
		this.threads = new ArrayList<ProcessThread>();
		Thread connectionThread = new ConnectionThread();
		connectionThread.start();
		for(SerialPort p : SerialPort.getCommPorts()){
			System.out.println("Port: " + p.getSystemPortName() + " | Baud rate: " + p.getBaudRate());
		}
		SerialPort port = SerialPort.getCommPort("COM5");
		port.openPort();
		InputStream input = port.getInputStream();
		while(true){
			//System.out.println("Value: " + readLine(input));
			String str = readLine(input);
			switch(str){
				case "H":
					str = readLine(input);
					System.out.println("Humidity: " + str);
					for(ProcessThread thread : threads){
						thread.setHumidity(Integer.valueOf(str).intValue());
					}
					break;
				case "T":
					str = readLine(input);
					System.out.println("Temperature: " + str);
					for(ProcessThread thread : threads){
						thread.setTemperature(Integer.valueOf(str).intValue());
					}
					break;
				default:
					break;
			}
		}
	}
	
	private String readLine(InputStream input) throws IOException{
		String str = "";
		for(int value = input.read(); value != DELIMETER; value = input.read()){
			switch(value){
				case 138: // This is the initial Serial.begin(9600);
				case 10:  // Newline \n
				case 13:  // Carriage return \r
					continue;
				default:
					str += (char) value;
					break;
			}
		}
		return str.trim();		
	}
	
	public void add(ProcessThread thread){
		threads.add(thread);
	}
	
	public static void main(String[] arg) throws IOException{
		
		//System.out.println(("Program ended"));
		DataTransmissionServer.INSTANCE.start();
	}
}
