package bpl.packet;

import java.io.IOException;
import java.io.InputStream;

import bpl.exception.BPLReadException;
import bpl.exception.BPLWriteException;

public abstract class Packet {

	public static final int DELIMETER = 124; 		// Equal to '|'
	public static final int SERIAL_BEGIN = 138;		// This is the initial Serial.begin(9600);
	public static final int NEWLINE = 10;			// Newline \n
	public static final int CARRIAGE_RETURN = 13;	// Carriage return \r	
	
	/**
	 * Write function to write input to a Packet
	 * @param input
	 * @throws BPLWriteException
	 * @throws IOException 
	 */
	public void write(InputStream input) throws BPLWriteException, IOException{
		throw new BPLWriteException("Unable to write packet: " + getClass().getName());
	}
	
	/**
	 * Read function to read a Packet into bytes
	 * @return
	 * @throws BPLReadException
	 */
	public byte[] read() throws BPLReadException, IOException{
		throw new BPLReadException("Unable to read packet: " + getClass().getName());
	}
	
	/**
	 * Reads a line of data, up until the delimeter, '|'
	 * Removes newlines, carriage returns, and serial begins
	 * @param input
	 * @return
	 * @throws IOException
	 */
	public static String readLine(InputStream input) throws IOException{
		String str = "";
		for(int value = input.read(); value != DELIMETER; value = input.read()){
			switch(value){
				case SERIAL_BEGIN:
				case NEWLINE:
				case CARRIAGE_RETURN:
					continue;
				default:
					str += (char) value;
					break;
			}
		}
		return str.trim();		
	}
}
