package pl.packet;

import java.io.IOException;
import java.io.InputStream;
import java.util.HashMap;
import java.util.Map;

import pl.googlecardboard.HumidityPacket;

public class PacketManager {

	private final Map<String, Class<? extends Packet>> packets;
	
	public PacketManager(){
		this.packets = new HashMap<String, Class<? extends Packet>>();
	}
	
	public final void addPacketClass(String id, Class<? extends Packet> clazz){
		packets.put(id, clazz);
	}
	
	public Packet new_Packet(String id) throws InstantiationException, IllegalAccessException{
		Class<? extends Packet> clazz = packets.getOrDefault(id, UnknownPacket.class);
		return clazz.newInstance();
	}
	
	public Packet new_Packet(String input){
		Packet packet = new_Packet(readLine(input));
		packet.write(readLine(input));
		return packet;
	}
	
	/**
	 * Reads a line of data, up until the delimeter, '|'
	 * Removes newlines, carriage returns, and serial begins
	 * @param input
	 * @return
	 * @throws IOException
	 */
	public static String readLine(InputStream input) throws IOException{
		String str = "";
		for(int value = input.read(); value != DELIMETER; value = input.read()){
			switch(value){
				case SERIAL_BEGIN:
				case NEWLINE:
				case CARRIAGE_RETURN:
					continue;
				default:
					str += (char) value;
					break;
			}
		}
		return str.trim();		
	}
}
