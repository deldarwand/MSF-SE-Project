package google.bluetooth;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import javax.microedition.io.StreamConnection;

import com.fazecast.jSerialComm.SerialPort;

import pl.packet.Packet;
import pl.packet.PacketManager;
import pl.packet.UnknownPacket;

public class Session implements Runnable{

	private final SerialPort port;
	private final StreamConnection connection;
	private final PacketManager manager;
	
	public Session(SerialPort port, StreamConnection connection, PacketManager manager) throws IOException{
		this.port = port;
		this.connection = connection;
		this.manager = manager;
	}
	
	public void run(){
		try {
			process();
		} catch (Exception exception) {
			exception.printStackTrace();
		}
	}
	
	private final void process() throws Exception{
		readThenWrite(port.getInputStream(), connection.openOutputStream());
		readThenWrite(connection.openInputStream(), port.getOutputStream());
	}
	
	private final void readThenWrite(InputStream input, OutputStream output) throws Exception{
		Packet packet = read(input);
		if(!(packet instanceof UnknownPacket)){
			write(output, packet);
		}
	}
	
	public void write(OutputStream output, Packet packet) throws Exception{
		output.write(packet.read());
	}
	
	public Packet read(InputStream input) throws Exception{
		return manager.new_Packet(readString(input));
	}
	
	private String readString(InputStream input) throws IOException{
		String str = "";
		int value;
		while((value = input.read()) != Packet.NONE && value != Packet.DELIMETER){
			/*
			 * There could be a better way to do this,
			 * but currently, not in a way such that
			 * it can take in any length of bytes
			 */
			str += (char) value;
		}
		return str;
	}
	
	
	
}
